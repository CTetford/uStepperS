const uint8_t CS  = PB2; // Pin 10
const uint8_t DIN = PB3; // Pin 11 (MOSI)
const uint8_t DO  = PB4; // Pin 12 (MISO)
const uint8_t CLK = PB5; // Pin 13

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  initSPI();
}

void loop() {
  // put your main code here, to run repeatedly:

  Serial.println( ssiData() );
  
  delay(10);

    
}

uint16_t ssiData(){

  uint16_t value = 0;
  uint8_t stats = 0;

  PORTD &= ~(1<<CS);  // Set CS LOW
  delayMicroseconds(1);
  
  // Write dummy 
  value = spiData(0x00);
  value <<= 8;

  // Write dummy 
  value |= spiData(0x00);

  // Write dummy 
  stats = spiData(0x00);

  PORTD |= (1<<CS);  // Set CS HIGH

  return value;
   
}

void initSPI(void)
{
  /* CS as OUTPUT */
  DDRD |= (1<<CS);
  
  /* Set MOSI (PB3) and SCK (PB5) as Output */
  DDRB = (1<<PB3)|(1<<PB5);
  
  /* 
   *  SPE   = 1: SPI enabled
   *  MSTR  = 1: Master
   *  SPR0  = 1 & SPR1 = 0: fOSC/16 = 1Mhz
   *  CPOL  = 1: Idle at HIGH
   *  CPHA  = 0: Sample at leading edge
   */
  SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)|(1<<CPOL);
}

uint8_t spiData(uint8_t data){

  SPDR = data;
  // Wait for transmission complete
  while(!(SPSR & (1<<SPIF)));    
  
  return SPDR;
}